<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pms.petopia.dao.MyTownBoardDao">
  
  <resultMap id="myTownBoardMap" type="myTownBoard">
    <id column="tno" property="no"/>
    <result column="title" property="title"/>
    <result column="cont" property="content"/>
    <result column="cdt" property="createdDate"/>
    <result column="vw_cnt" property="viewCount"/>
    <result column="rc_cnt" property="recommentCount"/>
    
    <association property="writer" javaType="member">
      <id column="writer_no" property="no"/>
      <result column="writer_nick" property="nick"/>
      <result column="writer_state" property="state"/>
    </association>
    
    <association property="bigAddress" javaType="bigAddress">
      <id column="bigAddress_no" property="no"/>
      <result column="bigAddress_name" property="name"/>
    </association>

    <association property="smallAddress" javaType="smallAddress">
      <id column="smallAddress_no" property="no"/>
      <result column="smallAddress_name" property="name"/>
    </association>
    
  </resultMap>
  
  <sql id="find">
    select
      t.tno, 
      t.title, 
      t.cdt, 
      t.vw_cnt,
      t.rc_cnt,
      m.mno as writer_no, 
      m.nick as writer_nick,
      m.state as writer_state,
      s.gno as bigAddress_no, 
      s.gname as bigAddress_name,
      c.cno as smallAddress_no, 
      c.cname as smallAddress_name
  </sql>
  
  <insert id="insert" parameterType="mytownboard">
    insert into pet_mytown(cno, title, cont, writer) 
    values(#{smallAddress.no}, #{title}, #{content}, #{writer.no})
  </insert>
  
  
  <select id="findAll" resultMap="myTownBoardMap">
    <include refid="find"/>
    from pet_state s
      inner join pet_city c on s.gno=c.gno
      inner join pet_mytown t on c.cno=t.cno
    order by t.tno desc
  </select>
  
  <select id="findByRecomment" resultMap="myTownBoardMap">
    <include refid="find"/>
    from pet_state s
      inner join pet_city c on s.gno=c.gno
      inner join pet_mytown t on c.cno=t.cno
      inner join pet_user m on t.writer=m.mno  
    where c.cno=#{cno} and s.gno=#{gno}
    order by t.rc_cnt desc
  </select>
  
  <select id="findByArea" resultMap="myTownBoardMap" parameterType="map">
    <include refid="find"/>
    from pet_state s
      inner join pet_city c on s.gno=c.gno
      inner join pet_mytown t on c.cno=t.cno
      inner join pet_user m on t.writer=m.mno  
    where c.cno=#{cno} and s.gno=#{gno}
    order by t.tno desc
  </select>

  <select id="findByKeyword" resultMap="myTownBoardMap" parameterType="map">
    <include refid="find"/>
		from pet_state s
		  inner join pet_city c on s.gno=c.gno
		  inner join pet_mytown t on c.cno=t.cno
		  inner join pet_user m on t.writer=m.mno  
		where 
		  c.cno=#{cno} and s.gno=#{gno}
		  and (t.title like concat('%', #{keyword},'%')
		  or m.nick like concat('%', #{keyword},'%')
		  or t.cont like concat('%', #{keyword},'%'))
    order by t.tno desc
  </select>
  
  <select id="findByMember" resultMap="myTownBoardMap" parameterType="int">
    <include refid="find"/>
    from pet_state s
      inner join pet_city c on s.gno=c.gno
      inner join pet_mytown t on c.cno=t.cno
      inner join pet_user m on t.writer=m.mno
    where m.mno=#{value}
  </select>
  
  <select id="findByNo" resultMap="myTownBoardMap" parameterType="int">
    select
      t.tno, 
      t.title, 
      t.cdt,
      t.cont,
      t.vw_cnt,
      t.rc_cnt,
      m.mno as writer_no, 
      m.nick as writer_nick,
      m.state as writer_state,
      s.gno as bigAddress_no, 
      s.gname as bigAddress_name,
      c.cno as smallAddress_no, 
      c.cname as smallAddress_name
    from pet_city c
      inner join pet_state s on s.gno=c.gno
      inner join pet_mytown t on c.cno=t.cno
      inner join pet_user m on t.writer=m.mno
    where t.tno=#{value}
  </select>
  
  <update id="update" parameterType="mytownboard">
    update pet_mytown set
      cno = #{smallAddress.no},
      title = #{title},
      cont = #{content},
      cdt = now()
    where tno=#{no}
  </update>
  
  <update id="updateViewCount" parameterType="int">
    update pet_mytown set 
      vw_cnt = vw_cnt + 1 
    where tno = #{value}
  </update>
  
  <update id="updateRecommentCount" parameterType="int">
    update pet_mytown set 
      rc_cnt = rc_cnt + 1
    where tno = #{value}
  </update>
  
  <delete id="deleteAll" parameterType="int">
  delete from pet_mytown
  where tno = #{value};
  </delete>
  
  <delete id="delete" parameterType="int">
  delete from pet_mytown
  where tno=#{value}
  </delete>
  

</mapper>







